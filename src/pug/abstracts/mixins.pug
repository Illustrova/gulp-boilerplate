//- MIXIN FOR IMAGE WITH SRCET AND SIZES ATTRIBUTES
//- @param {string} src - a string with path to original(default) file
//- @param {string} alt - a string with alt text
//- @param {string} sizes - a value for sizes attribute
//- FILE NAMING: to get this mixin working properly, all your source files need to be located in the same folder and follow the same naming scheme.
//- Default image: {fileName}.{FileExtention} --> this value should be passed as src argument
//- Alternative sources:{fileName}_(resolutions value, corresponding to the image).{fileExtention}.
//- Example:
//- Default image: src/img/heroimage.jpg
//- Source image for 500w viewport: src/img/heroimage-500.jpg

mixin img(src, alt, sizes)
	-
		var src = src.toLowerCase(); 
		var resolutions = Object.values(locals.vars.breakpoints).reverse(); //TODO: better control of the order of srcset
		// Split basename and extention
		var srcPath = [];
		srcPath.push(src.substring(0, src.lastIndexOf('.')), src.substring(src.lastIndexOf('.')));
		
		/** Set srcset **/
		var srcset = [];
		for (i = 0; i  <  resolutions.length; i++) {
			srcset.push(srcPath.join("_" + resolutions[i]) + " " + resolutions[i] + "w");
		}
		srcset = srcset.join(", ");

		/** Set placeholder src if lazyload is used (srcsetImages.lazyload = true) **/
		var phdir = "img/placeholders";
		var phsrc = phdir + src.substring(src.lastIndexOf("/"), src.lastIndexOf(".")) + ".svg";

		/** Set image width and height, if needed (srcsetImages.imgattrs = true) **/
		var imageWidth = null; //nulled attributes just won't be set
		var imageHeight = null;
		if (locals.vars.srcsetImages.imgattrs) {
			// Get image width and height attributes from JSON
			var imagesArr = Object.values(locals.img.images);
			// Helper function to find an image path in array with attributes
			var imageIndex = (function() {
				for(var i = 0; i < imagesArr.length; i += 1) {
					var element = imagesArr[i].path;
					if ((element.indexOf(element)) !== -1) {
						return i;
					}
				}
			})(src)

			imageWidth =  imagesArr[imageIndex].width;
			imageHeight =  imagesArr[imageIndex].height;
		}

	if locals.vars.srcsetImages.lazyload
		img(src=phsrc, alt=alt, data-srcset=srcset, data-sizes=sizes, data-src=src, width=imageWidth, height=imageHeight)&attributes(attributes)
	else
		img(src=src, alt=alt, srcset=srcset, sizes=sizes, width=imageWidth, height=imageHeight)&attributes(attributes)

//- SVG ICON MIXIN
mixin icon(name)
	svg(xmlns="http://www.w3.org/2000/svg" class="icon-" + name)
		use(xlink:href="icons/icons.svg#icon-" + name)

mixin a(href)
	a(href=normalizeURL(href), target="_blank", rel="noopener")&attributes(attributes)
		block